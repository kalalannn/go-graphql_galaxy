package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.63

import (
	"context"
	"go-graphql_galaxy/internal/gorm/services"
	"go-graphql_galaxy/internal/graphql/models"
	"go-graphql_galaxy/internal/transformers"
)

// Nemeses is the resolver for the nemeses field.
func (r *queryResolver) Nemeses(ctx context.Context) ([]*models.Nemesis, error) {
	nemesisEntities, err := services.NewNemesisService(r.DB, GetPreloads(ctx)).Nemeses()
	if err != nil {
		return nil, err //! check business error
	}
	return transformers.TransformNemesisEntitiesToModels(nemesisEntities), nil
}

// Nemesis is the resolver for the nemesis field.
func (r *queryResolver) Nemesis(ctx context.Context, id uint) (*models.Nemesis, error) {
	nemesisEntity, err := services.NewNemesisService(r.DB, GetPreloads(ctx)).Nemesis(id)
	if err != nil {
		return nil, err //! check business error
	}
	return transformers.TransformNemesisEntityToModel(nemesisEntity), nil
}
