package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.63

import (
	"context"
	"go-graphql_galaxy/internal/gorm/services"
	"go-graphql_galaxy/internal/graphql/models"
	"go-graphql_galaxy/internal/transformers"
)

// Characters is the resolver for the characters field.
func (r *queryResolver) Characters(ctx context.Context) ([]*models.Character, error) {
	characterService := services.NewCharacterService(r.DB)
	characterEntities, err := characterService.Characters()
	if err != nil {
		return nil, err //! check business error
	}

	return transformers.TransformCharacterEntitiesToModels(characterEntities), nil
}

// Character is the resolver for the character field.
func (r *queryResolver) Character(ctx context.Context, id uint) (*models.Character, error) {
	characterService := services.NewCharacterService(r.DB)
	characterEntity, err := characterService.Character(id)
	if err != nil {
		return nil, err //! check business error
	}

	// fields := graphql.CollectFieldsCtx(ctx, nil)

	return transformers.TransformCharacterEntityToModel(characterEntity), nil
}
