package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.63

import (
	"context"
	"go-graphql_galaxy/internal/gorm/services"
	"go-graphql_galaxy/internal/graphql/models"
	"go-graphql_galaxy/internal/transformers"
)

// Secrets is the resolver for the secrets field.
func (r *queryResolver) Secrets(ctx context.Context) ([]*models.Secret, error) {
	secretEntities, err := services.NewSecretService(r.DB, GetPreloads(ctx)).Secrets()
	if err != nil {
		return nil, err //! check business error
	}
	return transformers.TransformSecretEntitiesToModels(secretEntities), nil
}

// Secret is the resolver for the secret field.
func (r *queryResolver) Secret(ctx context.Context, id uint) (*models.Secret, error) {
	secretEntity, err := services.NewSecretService(r.DB, GetPreloads(ctx)).Secret(id)
	if err != nil {
		return nil, err //! check business error
	}
	return transformers.TransformSecretEntityToModel(secretEntity), nil
}
