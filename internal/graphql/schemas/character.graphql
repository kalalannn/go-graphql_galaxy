type Character {
  id: ID!
  name: String!
  gender: String
  ability: String!
  minimal_distance: Float!
  weight: Float
  born: String!
  in_space_since: String
  beer_consumption: Int!
  knows_the_answer: Boolean!
  nemeses: [Nemesis!]!
}

type Genders {
  male: Int64!
  female: Int64!
  other: Int64!
}

enum CharacterOrderByField {
  id
  name
  born
  beer_consumption
}

input CharacterOrderBy {
  field: CharacterOrderByField!
  direction: OrderByDirection!
}

extend type Query {
  characters_count: Int64!
  characters(orderBy: CharacterOrderBy = {field: id, direction: ASC}, pagination: PaginationInput): [Character!]!
  character(id: ID!): Character
  average_age: Float!
  average_weight: Float!
  average_beer_consumption: Float!
  genders: Genders!
}